(()=>{"use strict";var e={895:()=>{try{self["workbox:cacheable-response:6.5.1"]&&_()}catch(e){}},913:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},550:()=>{try{self["workbox:expiration:6.5.1"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{s(913);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const t=new Set,n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[n.prefix,e,n.suffix].filter((e=>e&&e.length>0)).join("-"),r=e=>e||a(n.precache),i=e=>e||a(n.runtime);function c(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}let o;function h(e){e.then((()=>{}))}class l{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}function u(e,t){const s=t();return e.waitUntil(s),s}const d=(e,t)=>t.some((t=>e instanceof t));let p,f;const g=new WeakMap,w=new WeakMap,m=new WeakMap,y=new WeakMap,_=new WeakMap;let b={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return w.get(e);if("objectStoreNames"===t)return e.objectStoreNames||m.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return R(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function v(e){return"function"==typeof e?(t=e)!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(f||(f=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(x(this),e),R(g.get(this))}:function(...e){return R(t.apply(x(this),e))}:function(e,...s){const n=t.call(x(this),e,...s);return m.set(n,e.sort?e.sort():[e]),R(n)}:(e instanceof IDBTransaction&&function(e){if(w.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",r),e.removeEventListener("abort",r)},a=()=>{t(),n()},r=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",r),e.addEventListener("abort",r)}));w.set(e,t)}(e),d(e,p||(p=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,b):e);var t}function R(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",r)},a=()=>{t(R(e.result)),n()},r=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",r)}));return t.then((t=>{t instanceof IDBCursor&&g.set(t,e)})).catch((()=>{})),_.set(t,e),t}(e);if(y.has(e))return y.get(e);const t=v(e);return t!==e&&(y.set(e,t),_.set(t,e)),t}const x=e=>_.get(e),C=["get","getKey","getAll","getAllKeys","count"],E=["put","add","delete","clear"],L=new Map;function q(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(L.get(t))return L.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=E.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!C.includes(s))return;const r=async function(e,...t){const r=this.transaction(e,a?"readwrite":"readonly");let i=r.store;return n&&(i=i.index(t.shift())),(await Promise.all([i[s](...t),a&&r.done]))[0]};return L.set(t,r),r}var D;D=b,b={...D,get:(e,t,s)=>q(e,t)||D.get(e,t,s),has:(e,t)=>!!q(e,t)||D.has(e,t)},s(550);const U="cache-entries",k=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class N{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(U,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(()=>t())),R(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=k(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(U,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(U,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(U).store.index("timestamp").openCursor(null,"prev");const a=[];let r=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&r>=t?a.push(n.value):r++),n=await n.continue()}const i=[];for(const e of a)await s.delete(U,e.id),i.push(e.url);return i}_getId(e){return this._cacheName+"|"+k(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:n,blocking:a,terminated:r}={}){const i=indexedDB.open(e,t),c=R(i);return n&&i.addEventListener("upgradeneeded",(e=>{n(R(i.result),e.oldVersion,e.newVersion,R(i.transaction))})),s&&i.addEventListener("blocked",(()=>s())),c.then((e=>{r&&e.addEventListener("close",(()=>r())),a&&e.addEventListener("versionchange",(()=>a()))})).catch((()=>{})),c}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class T{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new N(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const e of t)await s.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,h(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class I{constructor(e={}){var s;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),r=this._getCacheExpiration(s);h(r.expireEntries());const i=r.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(s=()=>this.deleteCacheAndMetadata(),t.add(s))}_getCacheExpiration(t){if(t===i())throw new e("expire-custom-caches-only");let s=this._cacheExpirations.get(t);return s||(s=new T(t,this._config),this._cacheExpirations.set(t,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}function K(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:n}=t;if(!n)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}s(977);class M{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class P{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}function A(e){return"string"==typeof e?new Request(e):e}s(873);class S{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new l,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(t){const{event:s}=this;let n=A(t);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:a.clone(),request:r.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=A(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(r,i);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:n,matchOptions:a,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(s,n){const a=A(s);await(0,new Promise((e=>setTimeout(e,0))));const r=await this.getCacheKey(a,"write");if(!n)throw new e("cache-put-with-no-response",{url:(i=r.url,new URL(String(i),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var i;const o=await this._ensureResponseSafeToCache(n);if(!o)return!1;const{cacheName:h,matchOptions:l}=this._strategy,u=await self.caches.open(h),d=this.hasCallback("cacheDidUpdate"),p=d?await async function(e,t,s,n){const a=c(t.url,s);if(t.url===a)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await e.keys(t,r);for(const t of i)if(a===c(t.url,s))return e.match(t,n)}(u,r.clone(),["__WB_REVISION__"],l):null;try{await u.put(r,d?o.clone():o)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of t)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:h,oldResponse:p,newResponse:o.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=A(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class O{constructor(e={}){this.cacheName=i(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new S(this,{event:t,request:s,params:n}),r=this._getResponse(a,s,t);return[r,this._awaitComplete(r,a,s,t)]}async _getResponse(t,s,n){let a;await t.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,t),!a||"error"===a.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const r of t.iterateCallbacks("handlerDidError"))if(a=await r({error:e,event:n,request:s}),a)break;if(!a)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))a=await e({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,r;try{a=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:r}),t.destroy(),r)throw r}}class W extends O{constructor(e={}){e.cacheName=r(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(W.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(t,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const e=a.integrity,r=t.integrity,i=!r||r===e;n=await s.fetch(new Request(t,{integrity:r||e})),e&&i&&(this._useDefaultCacheabilityPluginIfNeeded(),await s.cachePut(t,n.clone()))}return n}async _handleInstall(t,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(t);if(!await s.cachePut(t,n.clone()))throw new e("bad-precaching-response",{url:t.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==W.copyRedirectedCacheableResponsesPlugin&&(n===W.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(W.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}W.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},W.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await async function(t,s){let n=null;if(t.url&&(n=new URL(t.url).origin),n!==self.location.origin)throw new e("cross-origin-copy-response",{origin:n});const a=t.clone(),r={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=s?s(r):r,c=function(){if(void 0===o){const e=new Response("");if("body"in e)try{new Response(e.body),o=!0}catch(e){o=!1}o=!1}return o}()?a.body:await a.blob();return new Response(c,i)}(t):t};class j{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new W({cacheName:r(e),plugins:[...t,new P({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(t){const s=[];for(const n of t){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:t,url:a}=K(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:t});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(t)&&this._cacheKeysToIntegrities.get(t)!==n.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(t,n.integrity)}if(this._urlsToCacheKeys.set(a,t),this._urlsToCacheModes.set(a,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return u(e,(async()=>{const t=new M;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const n=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(t),r=new Request(t,{integrity:n,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:r,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return u(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params=Object.assign({cacheKey:s},e.params),this.strategy.handle(e))}}let B;const F=()=>(B||(B=new j),B);s(80);const H=e=>e&&"object"==typeof e?e:{handle:e};class ${constructor(e,t,s="GET"){this.handler=H(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=H(e)}}class V extends ${constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class G{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:a,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let i=r&&r.handler;const c=e.method;if(!i&&this._defaultHandlerMap.has(c)&&(i=this._defaultHandlerMap.get(c)),!i)return;let o;try{o=i.handle({url:s,request:e,event:t,params:a})}catch(e){o=Promise.reject(e)}const h=r&&r.catchHandler;return o instanceof Promise&&(this._catchHandler||h)&&(o=o.catch((async n=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:a})}catch(e){e instanceof Error&&(n=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const r of a){let a;const i=r.match({url:e,sameOrigin:t,request:s,event:n});if(i)return a=i,(Array.isArray(a)&&0===a.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(a=void 0),{route:r,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,H(e))}setCatchHandler(e){this._catchHandler=H(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let Q;const J=()=>(Q||(Q=new G,Q.addFetchListener(),Q.addCacheListener()),Q);function z(t,s,n){let a;if("string"==typeof t){const e=new URL(t,location.href);a=new $((({url:t})=>t.href===e.href),s,n)}else if(t instanceof RegExp)a=new V(t,s,n);else if("function"==typeof t)a=new $(t,s,n);else{if(!(t instanceof $))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=t}return J().registerRoute(a),a}class X extends ${constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}}function Y(e,t){!function(e){F().precache(e)}(e),function(e){const t=F();z(new X(t,e))}(t)}class Z extends O{async _handle(t,s){let n,a=await s.cacheMatch(t);if(a);else try{a=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(n=e)}if(!a)throw new e("no-response",{url:t.url,error:n});return a}}const ee={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class te extends O{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(ee)}async _handle(t,s){const n=s.fetchAndCachePut(t).catch((()=>{}));s.waitUntil(n);let a,r=await s.cacheMatch(t);if(r);else try{r=await n}catch(e){e instanceof Error&&(a=e)}if(!r)throw new e("no-response",{url:t.url,error:a});return r}}s(895);class se{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),t}}class ne{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new se(e)}}self.addEventListener("activate",(()=>self.clients.claim())),self.skipWaiting(),Y([{'revision':'914cc5e9aa0a81260d12dab70a2c0767','url':'118.js'},{'revision':'0ee60e111719c7493780fb5ada45ce21','url':'1337.js'},{'revision':'903f82714b33a6190718a89d6736a35e','url':'1350.js'},{'revision':'9f1e022bba13ad2a53275558e277fe4e','url':'1454.js'},{'revision':'9c8cbd24c9fbc9df7cc8f225f09bcdd7','url':'162.js'},{'revision':'ed9814e70a43947769f33b652f29a800','url':'163.js'},{'revision':'5ee4c2bc22fc222ca8e1cdd6c210ba1c','url':'1682.js'},{'revision':'5fb2163e97b5a3041a9aba22e008fc99','url':'183.js'},{'revision':'5cb8f5351042ddcd87eb2033d28cbcf1','url':'1835.js'},{'revision':'d6dbca2fbccd0c3b17e83400e036d747','url':'1849.js'},{'revision':'7a8e0ef516ae12c9d2164eafabb125a5','url':'1895.js'},{'revision':'3e0152697e68b3d87b1b1b32166ed5a0','url':'1920.js'},{'revision':'9d2df7fe49e2269cc0d1267954efe1aa','url':'1963.js'},{'revision':'58b0930fff89eec0031dbda629de7a2e','url':'2050.js'},{'revision':'a536eb04da75b46657dabd411e018ab7','url':'2079.js'},{'revision':'57a86f3dc21a7523e2ea08c16351dd6f','url':'2081.js'},{'revision':'b0a604529b80dd180b24477d19aa49b2','url':'2154.js'},{'revision':'120bf19874e57fecd279f1d331da0027','url':'2164.js'},{'revision':'c8e2f3d747c36befef5b0192e603d3c2','url':'2209.js'},{'revision':'5c8d49d7dc46af278271d0dc4f57411c','url':'2250.js'},{'revision':'85999e2e363b6e004da0c660d4efbf0b','url':'2543.js'},{'revision':'b80b5762af503695c8de91514584dd62','url':'2599.js'},{'revision':'66bc25e1e5b7b236bacc7224f49e4b8b','url':'2614.js'},{'revision':'23f9a577f4a73a19b729c276d1d49963','url':'2677.js'},{'revision':'527b9de492e72791693b95aa51a040dd','url':'2698.js'},{'revision':'fc518aedb214e163f152ca30cab9748c','url':'2785.js'},{'revision':'95e7a609583db09d0bda846d3c97f3de','url':'285.js'},{'revision':'49df1eba1ae7d9d33d77ae6df27f2aec','url':'2855.js'},{'revision':'bf3cdf73418a70d56cb89d5f16c7adfb','url':'2862.js'},{'revision':'997aa179eecf0f16e8afa2c0ce880ea9','url':'2939.js'},{'revision':'d12c6edcb852cedc783771a42a9b34dd','url':'3077.js'},{'revision':'4caadab055cd2ed334b0d0619bdb3293','url':'3084.js'},{'revision':'5dcc285ff26cd731071697c9633e9e56','url':'3205.js'},{'revision':'cb7384af5ac929293de65d0874d6f1d7','url':'3277.js'},{'revision':'44e9766bdc2c9ad7be758142ea4e38c6','url':'3320.js'},{'revision':'06152a6fdfd40dabe57fd46926dd9b01','url':'3543.js'},{'revision':'bf55be05b3539176fa49a77a72f3936b','url':'3757.js'},{'revision':'052c4ffe09862e4bb0bceeb1e22adcb4','url':'3780.js'},{'revision':'8287947643c3e2fb1bef32fb648275bc','url':'3780.js.LICENSE.txt'},{'revision':'d6ffef748eee37c09d5c6eb895f6269f','url':'3895.js'},{'revision':'3e93a2ddf6aa3613b875a1d0d9b38f1f','url':'4430.js'},{'revision':'c8aabb37e35190ad44acd1562d8452b8','url':'4501.js'},{'revision':'9c41b6d98ce43c54c1836b447bb7d446','url':'4639.js'},{'revision':'31603a412d82491d344ba7276551bf76','url':'4654.js'},{'revision':'855e70023d0581755792b92e83f8a663','url':'4669.js'},{'revision':'5d097839931e37e87dde4204e5d6623d','url':'4677.js'},{'revision':'f5a278124e9319f6d1321c7f24817b50','url':'472.js'},{'revision':'c9b98bcd20eaaa61849cd2a8942cb3d3','url':'4853.js'},{'revision':'956d756f66303c404589b4ccbfc9c1c5','url':'5045.js'},{'revision':'1c24c1870f0cd49aea809241c31d9797','url':'5118.js'},{'revision':'00b047f821183e7cd6c805ecb4510636','url':'513.js'},{'revision':'f390bb1d42e604f0d84485475adf4d70','url':'5153.js'},{'revision':'1c60a4f7599ca550868ed6811d76103f','url':'5202.js'},{'revision':'1ae9712ca92b26e32351278275a55c2d','url':'5251.js'},{'revision':'f6ee2dfb2a5f90b691f9fbf1903ae7da','url':'5437.js'},{'revision':'7cb5d455d6fcf8deb020b1875f790dcb','url':'5642.js'},{'revision':'02ed5a6f9ca047389caacc7e137d8974','url':'5663.js'},{'revision':'7d0aa91187daae29cfbe4142b3849e75','url':'5847.js'},{'revision':'6bb1abdc1f19234035135467856a83df','url':'5981.js'},{'revision':'c4830d3f3545ea03e6272e70bcbab234','url':'6078.js'},{'revision':'0bd5ac52c29276f255458ed66c184601','url':'6254.js'},{'revision':'d3cbf2faa66014e9026522f15624168d','url':'6359.js'},{'revision':'70c3db3a5b8d374a91f43fd1497adc84','url':'6667.js'},{'revision':'0d5cfb257d0972bf9d6f030520440288','url':'7158.js'},{'revision':'160c4ab2c22e42710fdf0285e6757ff5','url':'7357.js'},{'revision':'b761b1a0bfe14775cb24690d52ad78f9','url':'7471.js'},{'revision':'0b3491d0ee535bce02d8ab473f2e35d9','url':'7546.js'},{'revision':'1098d3a6ecaf1cbbc1950b744fc5fe6b','url':'7775.js'},{'revision':'fadf842380feeb12f8084345609f54b2','url':'8652.js'},{'revision':'fc1ffa1783a4b0c78367c2da2264e15a','url':'8661.js'},{'revision':'6df84f1c3a6bdf06f3722e89ef71fb8a','url':'8680.js'},{'revision':'eb2a96f6f7b6653c960f6fdebc338e09','url':'8730.js'},{'revision':'f276e864a05e00e1574ba116112602a9','url':'8900.js'},{'revision':'c4f8909598b3ee736d3f7aec2257b499','url':'9099.js'},{'revision':'610f4a3591ed5b95375a674119c90ffb','url':'9140.js'},{'revision':'f573f245cd88fe007bd0a4bd478311ee','url':'9159.js'},{'revision':'139e061859e9d331952c85a1815d5cfa','url':'9299.js'},{'revision':'9ba87a428ed06aa9b1455d7dca5beb5d','url':'9383.js'},{'revision':'4affd588efe6b0db1024748755a11075','url':'9510.js'},{'revision':'fbe6244883893bf60e75a9f6aae9d8b0','url':'9941.js'},{'revision':'244c8eaffa199de6a54ef0cd2712d01f','url':'chunk-fonts.js'},{'revision':'3bbc6eea522a28a379ccc8ba735518d6','url':'editor.js.LICENSE.txt'}]),z((e=>{let{url:t}=e;return"https://fonts.googleapis.com"===t.origin}),new te({cacheName:"google-fonts-stylesheets"})),z((e=>{let{url:t}=e;return"https://fonts.gstatic.com"===t.origin}),new Z({cacheName:"google-fonts-webfonts",plugins:[new ne({statuses:[0,200]}),new I({maxAgeSeconds:31536e3,maxEntries:30})]})),z((e=>{let{url:t}=e;return"https://wp.stories.google"===t.origin&&t.pathname.startsWith("/static/main/images/templates")}),new te({cacheName:"image-templates",plugins:[new ne({statuses:[0,200]}),new I({maxEntries:15})]})),z((e=>{let{request:t}=e;return"image"===t.destination}),new Z({cacheName:"images",plugins:[new ne({statuses:[0,200]}),new I({maxEntries:60,maxAgeSeconds:2592e3})]})),Y([{url:"https://cdn.ampproject.org/v0.js",revision:1},{url:"https://cdn.ampproject.org/v0/amp-story-1.0.js",revision:1}]),z((e=>{let{request:t}=e;return"script"===t.destination||"style"===t.destination}),new te({cacheName:"static-resources"}))})()})();